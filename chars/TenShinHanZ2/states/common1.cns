; Common state file for M.U.G.E.N 1.0
;
; System variables usage
; ----------------------
; Var name    Type   Purpose
; --------    ----   -------
; sysvar(0)   Temp   Set by state 5081 (HITL_SLIDE) to 1 to prevent
;                    showing ground hit frame in state 5110 (HIT_LIEDOWN).
;                    Used by guarding states.
; sysvar(1)   Temp   Used by state 40 (Jump Start) amd 45 (Air Jump Start)
;                    to keep track of which way to jump.
;                    Used by state 5100 and 5110 to remember downward
;                    velocity of player just before hitting the ground.
;                    Used in state 5080 for storing the anim # to display.

; The following states have special handling within MUGEN, and should be
; overridden with caution:
; Jump Start (40): airjumping bookkeeping at time = 0
; All guard states (120-155): guard handling throughout state
; Hit_trip, shaking (5070): defense increases at time = 0
; Downed get-hit (hit ground from fall) (5100):
;   defense increases at time = 0, player becomes invincible if within 10
;   ticks of getting up
; Hit_liedown (5110): player changes to get-up state (5120) when ready
; Hit_getup (5120): player's defence is restored to normal at time = 0
; Hitfall_recover (5200): player's defence is restored at time = 0
; Hitfall_airrecover (5210): player's defence is restored at time = 0

;---------------------------------------------------------------------------
; Stand
[Statedef 0]
type = S
physics = S
sprpriority = 0

[State 0, 1]
type = ChangeAnim
trigger1 = Anim != 0 && Anim != 5
trigger2 = Anim = 5 && AnimTime = 0 ;Turn anim over
value = 0

[State 0, 2]
type = VelSet
trigger1 = Time = 0
y = 0

[State 0, 3] ;Stop moving if low velocity or 4 ticks pass
type = VelSet
trigger1 = abs(vel x) < Const(movement.stand.friction.threshold)
trigger2 = Time = 4
x = 0

[State 0, 4] ;Are you dead?
type = ChangeState
trigger1 = !alive
value = 5050
ctrl = 0

;[State 0, Width]
;type = Width
;trigger1 = 1;AnimElemTime(2) >= 0 && AnimElemTime(3) <= 0
;value = 0,20
;ignorehitpause = 1

;---------------------------------------------------------------------------
; Stand to Crouch
[Statedef 10]
type    = C
physics = C
anim = 10
velset = 0,0

;[State 10, 1]
;type = VelMul
;trigger1 = Time = 0
;x = .75

[State 10, 2] ;Stop moving if low velocity
type = VelSet
trigger1 = abs(vel x) < Const(movement.crouch.friction.threshold)
x = 0

[State 10, 3]
type = ChangeState
trigger1 = AnimTime = 0
value = 11



;[State 10, Width]
;type = Width
;trigger1 = AnimElemTime(2) >= 0 && AnimElemTime(3) <= 0
;value = 0,12
;edge = 0,12
;ignorehitpause = 1
;
;[State 10, Width]
;type = Width
;trigger1 = AnimElemTime(3) >0
;value = 0,15
;edge = 0,15
;ignorehitpause = 1


;---------------------------------------------------------------------------
; Crouching
[Statedef 11]
type    = C
physics = C
anim = 11
sprpriority = 0

[State 11, 1] ;Change from turning animation
type = ChangeAnim
trigger1 = Anim = 6 && AnimTime = 0
value = 11

[State 11, 2] ;Stop moving if low velocity
type = VelSet
trigger1 = abs(vel x) < Const(movement.crouch.friction.threshold)
x = 0

;[State 11, Width]
;type = Width
;trigger1 = 1
;value = 0,20
;edge = 0,20
;ignorehitpause = 1

;---------------------------------------------------------------------------
; Crouch to Stand
[Statedef 12]
type    = S
physics = S
anim = 12

[State 12, 1]
type = ChangeState
trigger1 = AnimTime = 0
value = 0








; old guard codes, for the new ones check override.cns
;;---------------------------------------------------------------------------
;; GUARD (start)
;[Statedef 120]
;type = U    ;Leave state type unchanged
;physics = U ;Leave physics unchanged
;
;[State 120, 1]
;type = ChangeAnim
;trigger1 = Time = 0
;value = 120 + (statetype = C) + (statetype = A)*2
;
;[State 120, 2]
;type = StateTypeSet
;trigger1 = Time = 0 && statetype = S
;physics = S
;
;[State 120, 3]
;type = StateTypeSet
;trigger1 = Time = 0 && statetype = C
;physics = C
;
;[State 120, 4]
;type = StateTypeSet
;trigger1 = Time = 0 && statetype = A
;physics = A
;
;[State 120, Hi to Lo]
;type = StateTypeSet
;trigger1 = statetype = S && command = "holddown"
;statetype = C
;physics = C
;
;[State 120, Lo to Hi]
;type = StateTypeSet
;trigger1 = statetype = C && command != "holddown"
;statetype = S
;physics = S
;
;[State 120, 5]
;type = ChangeState
;trigger1 = AnimTime = 0
;value = 130 + (statetype = C) + (statetype = A)*2
;
;[State 120, Stop Guarding]
;type = ChangeState
;trigger1 = command != "holdback"
;trigger2 = !inguarddist
;value = 140
;
;;---------------------------------------------------------------------------
;; Stand guard (guarding)
;[Statedef 130]
;type    = S
;physics = S
;
;[State 130, 1]
;type = ChangeAnim
;trigger1 = Anim != 130
;value = 130
;
;[State 130, Hi to Lo]
;type = ChangeState
;trigger1 = command = "holddown"
;value = 131
;
;[State 130, Stop Guarding]
;type = ChangeState
;trigger1 = command != "holdback"
;trigger2 = !inguarddist
;value = 140
;
;;---------------------------------------------------------------------------
;; Crouch guard (guarding)
;[Statedef 131]
;type    = C
;physics = C
;
;[State 131, 1]
;type = ChangeAnim
;trigger1 = Anim != 131
;value = 131
;
;[State 131, Lo to Hi]
;type = ChangeState
;trigger1 = command != "holddown"
;value = 130
;
;[State 131, Stop Guarding]
;type = ChangeState
;trigger1 = command != "holdback"
;trigger2 = !inguarddist
;value = 140
;
;;---------------------------------------------------------------------------
;; Air guard (guarding)
;[Statedef 132]
;type    = A
;physics = N
;
;[State 132, 1]
;type = ChangeAnim
;trigger1 = Anim != 132
;value = 132
;
;[State 132, 2]
;type = VelAdd
;trigger1 = 1
;y = Const(movement.yaccel)
;
;[State 132, 3]
;type = VarSet
;trigger1 = 1
;sysvar(0) = (pos y >= 0) && (vel y > 0)
;
;[State 132, 4]
;type = VelSet
;trigger1 = sysvar(0)
;y = 0
;
;[State 132, 5]
;type = PosSet
;trigger1 = sysvar(0)
;y = 0
;
;[State 132, 6]
;type = ChangeState
;trigger1 = sysvar(0)
;trigger1 = command = "holdback"
;trigger1 = inguarddist
;value = 130
;
;[State 132, 7]
;type = ChangeState
;trigger1 = sysvar(0)
;value = 52
;
;[State 132, Stop Guarding]
;type = ChangeState
;trigger1 = command != "holdback"
;trigger2 = !inguarddist
;value = 140
;
;;---------------------------------------------------------------------------
;; Guard (end)
;[Statedef 140]
;type = U    ;Leave state type unchanged
;physics = U ;Leave physics unchanged
;ctrl = 1
;
;[State 140, 1]
;type = ChangeAnim
;trigger1 = Time = 0
;value = 140 + (statetype = C) + (statetype = A)*2
;
;[State 140, 2]
;type = StateTypeSet
;trigger1 = Time = 0 && statetype = S
;physics = S
;
;[State 140, 3]
;type = StateTypeSet
;trigger1 = Time = 0 && statetype = C
;physics = C
;
;[State 140, 4]
;type = StateTypeSet
;trigger1 = Time = 0 && statetype = A
;physics = A
;
;[State 140, Hi to Lo]
;type = StateTypeSet
;trigger1 = statetype = S && command = "holddown"
;statetype = C
;physics = C
;
;[State 140, Lo to Hi]
;type = StateTypeSet
;trigger1 = statetype = C && command != "holddown"
;statetype = S
;physics = S
;
;;[State 140, 5] ;Implemented within engine
;;type = ChangeState
;;trigger1 = AnimTime = 0
;;value = (statetype = C)*11 + (statetype = A)*51
;
;;---------------------------------------------------------------------------
;; Stand guard hit (shaking)
;[Statedef 150]
;type    = S
;movetype= H
;physics = N
;velset = 0,0
;
;[State 150, 1]
;type = ChangeAnim
;trigger1 = 1
;value = 150
;
;[State 150, 2]
;type = ChangeState
;trigger1 = HitShakeOver
;value = 151 + 2*(command = "holddown")
;
;[State 150, Hi to Lo]
;type = StateTypeSet
;trigger1 = statetype = S && command = "holddown"
;statetype = C
;physics = C
;
;[State 150, Lo to Hi]
;type = StateTypeSet
;trigger1 = statetype = C && command != "holddown"
;statetype = S
;physics = S
;
;[State 150, 3]
;type = ForceFeedback
;trigger1 = time = 0
;waveform = square
;time = 3
;
;;---------------------------------------------------------------------------
;; Stand guard hit (knocked back)
;[Statedef 151]
;type    = S
;movetype= H
;physics = S
;anim = 150
;
;[State 151, 1]
;type = HitVelSet
;trigger1 = Time = 0
;x = 1
;
;[State 151, 2]
;type = VelSet
;trigger1 = Time = GetHitVar(slidetime)
;trigger2 = HitOver
;x = 0
;
;[State 151, 3]
;type = CtrlSet
;trigger1 = Time = GetHitVar(ctrltime)
;value = 1
;
;[State 151, Hi to Lo]
;type = StateTypeSet
;trigger1 = statetype = S && command = "holddown"
;statetype = C
;physics = C
;
;[State 151, Lo to Hi]
;type = StateTypeSet
;trigger1 = statetype = C && command != "holddown"
;statetype = S
;physics = S
;
;[State 151, 4]
;type = ChangeState
;trigger1 = HitOver
;value = 130
;ctrl = 1
;
;;---------------------------------------------------------------------------
;; Crouch guard hit (shaking)
;[Statedef 152]
;type    = C
;movetype= H
;physics = N
;velset = 0,0
;
;[State 152, 1]
;type = ChangeAnim
;trigger1 = 1
;value = 151
;
;[State 152, 3]
;type = ChangeState
;trigger1 = HitShakeOver
;value = 151 + 2*(command = "holddown")
;
;[State 152, Hi to Lo]
;type = StateTypeSet
;trigger1 = statetype = S && command = "holddown"
;statetype = C
;physics = C
;
;[State 152, Lo to Hi]
;type = StateTypeSet
;trigger1 = statetype = C && command != "holddown"
;statetype = S
;physics = S
;
;[State 152, 4]
;type = ForceFeedback
;trigger1 = time = 0
;waveform = square
;time = 4
;
;;---------------------------------------------------------------------------
;; Crouch guard hit (knocked back)
;[Statedef 153]
;type    = C
;movetype= H
;physics = C
;anim = 151
;
;[State 153, 1]
;type = HitVelSet
;trigger1 = Time = 0
;x = 1
;
;[State 153, 2]
;type = VelSet
;trigger1 = Time = GetHitVar(slidetime)
;trigger2 = HitOver
;x = 0
;
;[State 153, 3]
;type = CtrlSet
;trigger1 = Time = GetHitVar(ctrltime)
;value = 1
;
;[State 153, Hi to Lo]
;type = StateTypeSet
;trigger1 = statetype = S && command = "holddown"
;statetype = C
;physics = C
;
;[State 153, Lo to Hi]
;type = StateTypeSet
;trigger1 = statetype = C && command != "holddown"
;statetype = S
;physics = S
;
;[State 153, 4]
;type = ChangeState
;trigger1 = HitOver
;value = 131
;ctrl = 1
;
;;---------------------------------------------------------------------------
;; Air guard hit (shaking)
;[Statedef 154]
;type    = A
;movetype= H
;physics = N
;velset = 0,0
;
;[State 154, 1]
;type = ChangeAnim
;trigger1 = 1
;value = 152
;
;[State 154, 2]
;type = ChangeState
;trigger1 = HitShakeOver
;value = 155 ;AGUARDHIT2
;
;[State 154, 3]
;type = ForceFeedback
;trigger1 = time = 0
;waveform = square
;time = 4
;
;;---------------------------------------------------------------------------
;; Air guard hit (knocked away)
;[Statedef 155]
;type    = A
;movetype= H
;physics = N
;anim = 152
;
;[State 155, 1]
;type = HitVelSet
;trigger1 = Time = 0
;x = 1
;y = 1
;
;[State 155, 2]
;type = VelAdd
;trigger1 = 1
;y = Const(movement.yaccel)
;
;[State 155, 3]
;type = CtrlSet
;trigger1 = Time = GetHitVar(ctrltime)
;value = 1
;
;[State 155, 4]
;type = VarSet
;trigger1 = 1
;sysvar(0) = (pos y >= 0) && (vel y > 0)
;
;[State 155, 5]
;type = VelSet
;trigger1 = sysvar(0)
;y = 0
;
;[State 155, 6]
;type = PosSet
;trigger1 = sysvar(0)
;y = 0
;
;[State 155, 6]
;type = ChangeState
;trigger1 = sysvar(0)
;trigger1 = command = "holdback"
;trigger1 = inguarddist
;value = 130
;
;[State 155, 7]
;type = ChangeState
;trigger1 = sysvar(0)
;value = 52

;---------------------------------------------------------------------------
; Lose (time over)
[Statedef 170]
type = S
ctrl = 0
anim = 170
velset = 0,0

[State 170, 1]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1

;---------------------------------------------------------------------------
; Draw game (time over)
[Statedef 175]
type = S
ctrl = 0
velset = 0,0

[State 175, 1] ; If no anim, use go to lose state.
type = ChangeState
trigger1 = Time = 0
trigger1 = !SelfAnimExist(175)
value = 170

[State 175, 2]
type = ChangeAnim
trigger1 = Time = 0
value = 175

[State 175, 3]
type = NotHitBy
trigger1 = 1
value = SCA
time = 1



;---------------------------------------------------------------------------
; Stand get-hit (shaking)
[Statedef 5000]
type    = S
movetype= H
physics = N
velset = 0,0

[State 5000, 1] ;Anim for HIT_LIGHT to HIT_HARD
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) != [3,5]
value = IfElse((GetHitVar(groundtype) = 1),5000,5010) + GetHitVar(animtype)

[State 5000, 2] ;Anim for HIT_BACK
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) = [3,5]
value = 5030

[State 5000, 3] ;Anim for HIT_UP/HIT_DIAGUP (only if it exists)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (GetHitVar(animtype) = [4,5]) && (SelfAnimExist(5047 + GetHitVar(animtype)))
value = 5047 + GetHitVar(animtype) ;5051 - 4 + type

[State 5000, 4] ;Freeze anim
type = ChangeAnim
trigger1 = Time > 0
value = anim

[State 5000, 5] ;State type gets set to aerial if getting hit up
type = StateTypeSet
trigger1 = Time = 0
trigger1 = GetHitVar(yvel) != 0 || GetHitVar(fall)
trigger2 = Pos Y != 0
statetype = a

[State 5000, FFB Light]
type = ForceFeedback
trigger1 = anim = 5000
trigger2 = anim = 5010
persistent = 0
time = 6
waveform = square

[State 5000, FFB Medium]
type = ForceFeedback
trigger1 = anim = 5001
trigger2 = anim = 5011
persistent = 0
time = 8
waveform = sinesquare
ampl = 110,-1,-.3

[State 5000, FFB Hard]
type = ForceFeedback
trigger1 = anim = 5012
trigger2 = anim = 5002
trigger3 = anim = 5030
persistent = 0
time = 15
waveform = sinesquare
ampl = 140

[State 5000, 6]
type = ChangeState
trigger1 = HitShakeOver
trigger1 = GetHitVar(yvel) = 0 && !GetHitVar(fall)
value = 5001 ;Stand get-hit (knocked back)

[State 5000, 7]
type = ChangeState
trigger1 = HitShakeOver
value = 5030

;---------------------------------------------------------------------------
; Stand get-hit (knocked back)
[Statedef 5001]
type    = S
movetype= H
physics = S

[State 5001, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1

[State 5001, 2]
type = ChangeAnim
trigger1 = AnimTime = 0
value = 5005 + GetHitVar(animtype) + (GetHitVar(groundtype)=2)*10

[State 5001, 3] ;Stop sliding back
type = VelMul
trigger1 = Time >= GetHitVar(slidetime)
x = .6

[State 5001, 4]
type = VelSet
trigger1 = HitOver
x = 0

[State 5001, 5]
type = DefenceMulSet
trigger1 = HitOver
value = 1

[State 5001, 6]
type = ChangeState
trigger1 = HitOver
value = 0
ctrl = 1

;---------------------------------------------------------------------------
; Crouch get-hit (shaking)
[Statedef 5010]
type    = C
movetype= H
physics = N
velset = 0,0

[State 5010, 1] ;Anim for HIT_LIGHT to HIT_HARD
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) != [3,5]
value = 5020 + GetHitVar(animtype)

[State 5010, 2] ;Anim for HIT_BACK
type = ChangeAnim
trigger1 = Time = 0
trigger1 = GetHitVar(animtype) = [3,5]
value = 5030

[State 5010, 3] ;Anim for HIT_UP/HIT_DIAGUP (only if it exists)
type = ChangeAnim
trigger1 = Time = 0
trigger1 = (GetHitVar(animtype) = [4,5]) && (SelfAnimExist(5047 + GetHitVar(animtype)))
value = 5047 + GetHitVar(animtype) ;5051 - 4 + type

[State 5010, 4] ;Freeze anim
type = ChangeAnim
trigger1 = Time > 0
value = anim

[State 5010, 5] ;State type gets set to aerial if getting hit up
type = StateTypeSet
triggerall = Time = 0
trigger1 = GetHitVar(yvel) != 0 || GetHitVar(fall)
trigger2 = Pos Y != 0
statetype = a

[State 5010, 6]
type = ChangeState
trigger1 = HitShakeOver
trigger1 = GetHitVar(yvel) = 0 && !GetHitVar(fall)
value = 5011 ;Crouch get-hit (knocked back)

[State 5010, 7]
type = ChangeState
trigger1 = HitShakeOver
value = 5030

[State 5010, FFB Light]
type = ForceFeedback
trigger1 = anim = 5020
persistent = 0
time = 6
waveform = square

[State 5010, FFB Medium]
type = ForceFeedback
trigger1 = anim = 5021
persistent = 0
time = 8
waveform = sinesquare
ampl = 110,-1,-.3

[State 5010, FFB Hard]
type = ForceFeedback
trigger1 = anim = 5022
persistent = 0
time = 15
waveform = sinesquare
ampl = 140

;---------------------------------------------------------------------------
; Crouch get-hit (knocked back)
[Statedef 5011]
type    = C
movetype= H
physics = C

[State 5011, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1

[State 5011, 2]
type = ChangeAnim
trigger1 = AnimTime = 0
value = 5025 + GetHitVar(animtype)

[State 5011, 3] ;Stop sliding back
type = VelMul
trigger1 = Time >= GetHitVar(slidetime)
x = .6

[State 5011, 4]
type = VelSet
trigger1 = HitOver
x = 0

[State 5011, 5]
type = DefenceMulSet
trigger1 = HitOver
value = 1

[State 5011, 6]
type = ChangeState
trigger1 = HitOver
value = 11
ctrl = 1



;---------------------------------------------------------------------------
; Air get-hit (knocked away)
[Statedef 5030]
type    = A
movetype= H
physics = N
ctrl = 0

[State 5030, 1]
type = ChangeAnim
trigger1 = Anim != [5000, 5199]
trigger1 = SelfAnimExist(5030)
value = 5030

[State 5030, 2]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5030, 3]
type = HitVelSet
trigger1 = Time = 0
x = 1
y = 1

[State 5030, 4]
type = ChangeState
triggerall = !HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= Const(movement.air.gethit.groundlevel)
value = 5040 ;HITA_RECOV

[State 5030, 5]
type = ChangeState
triggerall = HitFall
trigger1 = HitOver
trigger2 = Vel Y > 0    ;Hit ground
trigger2 = Pos Y >= Const(movement.air.gethit.groundlevel)
value = 5050 ;HITA_FALL

[State 5030, 6]
type = ChangeState
trigger1 = AnimTime = 0
value = 5035 ;Air get-hit (transition)

;---------------------------------------------------------------------------
; Air get-hit (transition)
[Statedef 5035]
type    = A
movetype= H
physics = N

[State 5035, 1]
type = ChangeAnim
trigger1 = Time = 0
trigger1 = SelfAnimExist(5035)
trigger1 = Anim != [5051,5059] ;Not if in hit up anim
trigger1 = Anim != 5090 ;Not if hit off ground anim
value = 5035

[State 5035, 2]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5035, 3]
type = ChangeState
triggerall = !HitFall
trigger1 = HitOver  ;Hit is over
trigger2 = AnimTime = 0 ;Animation over
trigger3 = Vel Y > 0    ;Hit ground
trigger3 = Pos Y >= Const(movement.air.gethit.groundlevel)
trigger4 = Time = 0     ;No transition anim
trigger4 = Anim != 5035 ;.
value = 5040 ;Air get-hit (recovering in air, not falling)

[State 5035, 4]
type = ChangeState
triggerall = HitFall
trigger1 = HitOver  ;Hit is over
trigger2 = AnimTime = 0 ;Anim is over
trigger3 = Vel Y > 0    ;Hit ground
trigger3 = Pos Y >= Const(movement.air.gethit.groundlevel)
trigger4 = Time = 0     ;No transition anim
trigger4 = Anim != 5035 ;.
value = 5050 ;Air get-hit (falling)

;---------------------------------------------------------------------------
; Air get-hit (recovering in air, not falling)
[Statedef 5040]
type    = A
movetype= H
physics = N

[State 5040, 1]
type = ChangeState
trigger1 = !Alive
value = 5050
ctrl = 0

[State 5040, 2]
type = ChangeAnim
trigger1 = AnimTime = 0
trigger1 = Anim != 5040
trigger2 = Time = 0
trigger2 = Anim != 5035
value = 5040

[State 5040, 3]
type = CtrlSet
trigger1 = HitOver
value = 1

[State 5040, 4]
type = StateTypeSet
trigger1 = HitOver
movetype = I

[State 5040, 5]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5040, 6]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= 0
value = 52 ;Jump land

;---------------------------------------------------------------------------
; Air get-hit (falling)
[Statedef 5050]
type    = A
movetype= H
physics = N

[State 5050, 1] ;Change anim when done with transition
type = ChangeAnim
trigger1 = AnimTime = 0
trigger1 = Anim = 5035
trigger2 = Time = 0     ;If no transition anim
trigger2 = Anim != 5035
trigger2 = (Anim != [5051, 5059]) && (Anim != [5061, 5069])
trigger2 = Anim != 5090 ;Not if hit off ground anim
value = 5050

[State 5050, 2] ;Coming down anim
type = ChangeAnim
trigger1 = anim = [5050,5059]
trigger1 = Vel Y >= IfElse(anim = 5050, Const720p(4), Const720p(-8))
trigger1 = SelfAnimExist(anim+10)
value = anim+10
persistent = 0

[State 5050, 3] ;Gravity
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5050, 4] ;Recover near ground
type = ChangeState
triggerall = Vel Y > 0
triggerall = Pos Y >= Const(movement.air.gethit.groundrecover.ground.threshold)
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5200 ;Air get-hit (fall recovery on ground)

[State 5050, 5]; Recover in mid air
type = ChangeState
triggerall = Vel Y > Const(movement.air.gethit.airrecover.threshold)
triggerall = alive
triggerall = CanRecover
trigger1 = Command = "recovery"
value = 5210 ;Air get-hit (fall recovery in air)

[State 5050, 6]
type = ChangeState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= IfElse((anim = [5051,5059]) || (anim = [5061,5069]), 0, Const(movement.air.gethit.groundlevel))
value = 5100 ;Downed get-hit (hit ground from fall)

;---------------------------------------------------------------------------
; Downed get-hit (shaking)
[Statedef 5080]
type    = L
movetype= H
physics = N
velset = 0,0

[State 5080, 1] ;Set default anim
type = VarSet
trigger1 = time = 0
sysvar(2) = IfElse (GetHitVar(yvel) = 0, 5080, 5090)

[State 5080, 2]
type = VarAdd
trigger1 = time = 0
trigger1 = (anim = [5081,5089]) || (anim = [5111,5119])
trigger1 = SelfAnimExist(sysvar(2) + (anim % 10))
sysvar(2) = anim % 10

[State 5080, 3] ;If 5090 doesn't exist, default to 5030
type = VarSet
trigger1 = time = 0
trigger1 = sysvar(2) = 5090
trigger1 = !SelfAnimExist(5090)
sysvar(2) = 5030

[State 5080, 3] ;Freeze
type = ChangeAnim
trigger1 = 1
value = sysvar(2)

[State 5080, 4]
type = ChangeState
trigger1 = HitShakeOver
trigger1 = GetHitVar(yvel) = 0
value = 5081 ;Downed get-hit (knocked back)

[State 5080, 5]
type = ChangeState
trigger1 = HitShakeOver
trigger1 = GetHitVar(yvel) != 0
value = 5030 ;Air get-hit (knocked away)

;---------------------------------------------------------------------------
; Downed get-hit (knocked back)
[Statedef 5081]
type    = L
movetype= H
physics = C

[State 5081, 1]
type = HitVelSet
trigger1 = Time = 0
x = 1

[State 5081, 2]
type = VelSet
trigger1 = HitOver
x = 0

[State 5081, 3] ;Don't show hit ground frame
type = VarSet
trigger1 = Time = 0
sysvar(0) = 1

[State 5081, 4]
type = ChangeState
trigger1 = HitOver
value = 5110 ;Downed get-hit (lying down)







;---------------------------------------------------------------------------
; Air get-hit (fall recovery on ground; still falling)
[Statedef 5200]
type    = A
movetype= H
physics = N

[State 5200, 1] ;Change anim if done with transition
type = ChangeAnim
trigger1 = Anim = 5035
trigger1 = AnimTime = 0
value = 5050

[State 5200, 2]
type = VelAdd
trigger1 = 1
y = GetHitVar(yaccel)

[State 5200, 3]
type = SelfState
trigger1 = Vel Y > 0
trigger1 = Pos Y >= Const(movement.air.gethit.groundrecover.groundlevel)
value = 5201



;---------------------------------------------------------------------------
; Continue screen animation
[Statedef 5500]
type = S
ctrl = 0
anim = 5300
velset = 0,0

[State 5500, 1] ;Use continue animation if available
type = ChangeAnim
trigger1 = time = 0
trigger1 = SelfAnimExist(5500)
value = 5500
